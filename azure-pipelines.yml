# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-18.04

steps:
- script: |  
   echo ========== Starting: Instalando Dependencias ==========
   sudo apt-get -y update
   sudo apt-get -y install curl 
   echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
   sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
   sudo apt-get -y update
   sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
   sudo apt-get -y update
   sudo apt-get -y install sbt git debianutils rpm ssh  
   echo ========== Finishing: Instalando Dependencias ==========
  displayName: 'Instalando Dependencias'

- script:  |
   echo ========== Starting: Compilacion ==========
   git clone https://github.com/josesolanor/Proyecto-gcs.git
   cd Proyecto-gcs
   sbt compile
   echo  ========== Finishing: Compilacion
   echo  ========== Starting: Pruebas Unitarias
   sudo sbt test
   echo  ========== Finishing: Pruebas Unitarias
  displayName: 'Fase de Verificacion de Contribucion'

- script:  |
   echo  ========== Starting: Fase de Verificacion de Pruebas de Integracion
   sudo systemctl start docker
   sudo docker run -d -e POSTGRES_PASSWORD=gcs -e POSTGRES_USER=gcs -e POSTGRES_DB=gcs -p 127.0.0.1:5432:5432 postgres:9.5
   export PGPASSWORD='gcs'
   until psql -h "127.0.0.1" -U "gcs" -c '\l'; do
   >&2 echo "Base de datos en espera"
   sleep 1
   done
   >&2 echo "Base de Datos listo"
   sbt "project gcsAppIT" test
   echo  ========== Finishing: Fase de Verificacion de Pruebas de Integracion
  displayName: 'Fase de Verificacion de Pruebas de Integracion'

- script:  |
   echo  ========== Starting: Empaquetando
   sudo sbt rpm:packageBin    
   echo  ========== Finishing: Empaquetando
   echo  ========== Starting: Copiando al Servidor
   mv $(Agent.BuildDirectory)/s/Proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm ~/gcs-app-2.8.x-1.noarch.rpm   
   mkdir ~/.ssh
   echo  ========== Finishing: Copiando al Servidor
   echo  ========== Starting: Permisos y Despliegue
   echo $(SSH_KEY) | base64 -di > ~/.ssh/id_rsa
   sudo chmod 600 ~/.ssh/id_rsa
   ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_IP) "sudo sed -i '/dbserver/d' /etc/hosts"
   ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_IP) "sudo bash -c \"echo '$(DATABASE_IP)    dbserver' >> /etc/hosts\""
   scp -o "StrictHostKeyChecking no" ~/gcs-app-2.8.x-1.noarch.rpm azureuser@$(WEBSERVER_IP):.
   ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_IP) "sudo dnf install -y ~/gcs-app-2.8.x-1.noarch.rpm"
   echo  ========== Finishing: Permisos y Despliegue
  displayName: 'Fase de Despliegue a servidor de pruebas'

